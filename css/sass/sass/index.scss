//partials
@import 'default';

//variables creation
$primary-color: yellow;
$primary-font: sans-serif, 'cursive';

body{
    background: $primary-color;
    font-family: $primary-font;
}
// Nesting
.container{
    width: 100%;
    height: 100%;
    nav{
        ul{
            li{
                &:nth-child(1){ //this is an exampple for the psudo selector
                    font-size: 30px;
                }
                &:nth-child(2){
                    font-size: 40px;
                }
                font-size: 50px;
            }
        }
        a{
            text-decoration: none;
        }
    }
}

//Prathidaniki ee transform vadali ante we should repeat kabatti, we will use mixins
// .transform{
//     width:150px;
//     height:80px;
//     background-color: yellow;
//     -ms-transform: rotate(20deg) scale(1.5);
//     -webkit-transform:rotate(20deg) scale(1.5);
//     transform: rotate(20deg) scale(1.5);
// }

@mixin transform_Me($prop1,$prop2){
    width:$prop1;
    height:$prop2;
    background-color: yellow;
    -ms-transform: rotate(20deg) scale(1.5);
    -webkit-transform:rotate(20deg) scale(1.5);
    transform: rotate(20deg) scale(1.5);
}

.transform{
    @include transform_Me(30px,500px);
}
.transform2{
    @include transform_Me(300px,200px);
    font-size:30px;
}

// extend is like inheritenace
%extend-border{
    border: 1px solid yellow;
    padding:10px;
    color:black;
}
.border{
    @extend %extend-border;
}
.border2{
@extend %extend-border;
margin:20px;
}
//if we only create the extend and dont use it in any class, it will not be shown in the .css file

//Pseudo classes
.element{
    a{
        text-decoration: underline;
        color:black;
        &:hover{ // "&" antey it refers to the current class which is the anchor tag here and then select the hover which is the pseudo selector
color: blue;
        }
    }
}
